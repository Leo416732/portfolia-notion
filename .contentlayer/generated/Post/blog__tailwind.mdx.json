{
  "title": "Tailwind over everything. Mocking the iOS Weather app UI",
  "summary": "This is why I will use Tailwind CSS for almost every project moving forward.",
  "publishedAt": "2023-03-05",
  "tags": [
    "Styling",
    "CSS"
  ],
  "body": {
    "raw": "\nTailwind CSS is a utility-first CSS framework that has taken the web development world by storm. It has quickly become a go-to choice for developers who want to streamline their CSS workflow and build websites faster. If you're not already familiar with Tailwind, you may be wondering what all the fuss is about.\n\nIn this blog, we'll explore some of the key benefits of using [Tailwind CSS](tailwind.com) as well as some of the drawbacks of more traditional approaches to CSS development. By the end of this post, you'll have a better understanding of how Tailwind can make your development process more efficient and effective, and why it's quickly becoming a must-have tool for web developers of all levels.\n\n## Let's Talk about DX\n\nIn design, there's User Interface, User Experience, and Human Interface (as Apple calls it), but let's not forget about the **Developer Experience**. Tailwind is a great example of a tool that makes the developer experience better.\n\nWorking with CSS files that go unused can be a frustrating experience for developers. When a CSS file contains styles that are no longer used in the project, it can make it difficult to find and update the styles that are needed. in the long run. Here are a couple key points to consider:\n\n- Less time thinking of funky names <sup>1</sup>\n\n- Reduce the size of your CSS files <sup>2</sup>\n\n- Editing already existing styles feels safer <sup>3</sup>\n\n<div className=\"text-tertiary text-sm mt-8\">\n1 - Tailwind helps you save time and effort by eliminating the need to create unique class names for every element in your UI. You no longer have to struggle to come up with abstract or irrelevant names such as \"sidebar-inner-wrapper\" or \"content-container\".\n\n2 - making it easier to manage and maintain. Unlike traditional CSS, where you need to create new stylesheets for every new feature, Tailwind's utility classes can be easily reused throughout your project, significantly reducing the need to write new CSS code.\n\n3 - because classes are local to the HTML elements. With global CSS, any change you make can have unforeseen consequences elsewhere in your project, but with Tailwind, you can make changes with confidence, knowing that you won't accidentally break anything.\n\n</div>\n\n## Looking forward\n\nOn the bright side, we're starting to see more and more tools prioritizing the developer experience. This is a huge plus for us developers who want to focus on building features and functionality, rather than spending hours trying to figure out how to style a component.\n\n## Speed and Efficiency\n\nCheck out this iOS weather widget. I was able to create this component in less than 5 minutes, which would have taken me much longer if I had to write the CSS and having to switch between files.\n\n<Weather />\n\nOne of the biggest advantages of using Tailwind CSS is its ability to speed up the development process. By using utility classes, Tailwind allows developers to quickly create and style components without having to write any custom CSS. I know what you're thinking - aren't utility classes just a fancy way of saying \"inline styles\"? While that may be true, Tailwind's utility classes are much more powerful than inline styles.\n\nAdditionally, Tailwind has built-in pseudo styles like `hover`, `focus`, and `active` (used above), which can be used to create more complex components, without leaving your TS or JS file.\n\n## The Power of Reusable Components\n\nOne of the key advantages of Tailwind CSS is its promotion of reusable components. Which is now a standard in the front-end world. By using pre-defined classes, Tailwind allows developers to create reusable components that can be easily used throughout the codebase.\n\n```tsx showLineNumbers\nconst WeatherList = () => {\n  return (\n    <div className=\"my-8 flex flex-col gap-2\">\n      {data.map((item, index) => (\n        <CityCard key={index} data={item} />\n      ))}\n    </div>\n  );\n};\n```\n\n<figcaption>List component</figcaption>\n\nContinuing with the weather theme here, let's create a reusable card component that can be used to display the current weather for a list of cities. With Tailwind, you can style your HTML elements without having to write any CSS rules. This can save you a lot of time, especially if you are working on a large project. Then when you need to reuse this, you don't have to go look for the `styles.css` file and copy it to a new location.\n\n```tsx showLineNumbers\nexport default const CityCard = ({item}) => {\n  return (\n    <div\n      className={`flex justify-between rounded-3xl bg-gradient-to-br text-white p-4 lg:px-8\n      ${item.color}\n    `}>\n      <div>\n        <p className=\"text-xl font-bold\">{item.city}</p>\n        <p className=\"text-sm font-medium mb-5 opacity-75\">{item.time}</p>\n        <p className=\"text-sm font-medium mt-auto\">{item.state}</p>\n      </div>\n      <div className=\"flex flex-col justify-between\">\n        <p className=\"text-5xl\">{item.temperature}°</p>\n        <p className=\"text-sm font-medium mt-auto opacity-75\">\n          H:{item.temperature + 7}°\n          L:{item.temperature - 7}°\n        </p>\n      </div>\n    </div>\n  );\n};\n```\n\n<figcaption>Individual city component</figcaption>\n\nSo what? This approach not only makes development more efficient but also ensures that the UI is consistent across the project. Additionally, reusable components can be easily updated and maintained, reducing the amount of duplicate code and improving the overall quality of the codebase.\n\n<WeatherList />\n\nOverall, Tailwind's focus on reusable components makes it a valuable tool for any developer looking to create scalable and maintainable user interfaces.\n\n## What About Other UI Libraries?\n\nWhile there are many UI libraries available, from my experience, I always found myself overriding the default styles of the library to match my project's design language. UI libraries can be a great choice for small projects where you want to quickly create a functional and visually appealing user interface.\n\nHowever, at scale, you typically have branding and a company design language that you want to follow or set forth. In these cases, using a UI library may not be the best approach as it can be challenging to customize the styles to fit your branding and design requirements.\n\nInstead, creating custom components using a utility-first CSS framework like Tailwind can be a better option, as it allows for more flexibility and control over the styling of the components. Overall, while UI libraries can be useful for smaller projects, it's important to consider the specific requirements and constraints of each project before making a decision on which approach to take.\n",
    "code": "var Component=(()=>{var cn=Object.create;var U=Object.defineProperty;var dn=Object.getOwnPropertyDescriptor;var fn=Object.getOwnPropertyNames;var mn=Object.getPrototypeOf,bn=Object.prototype.hasOwnProperty;var H=(u,o)=>()=>(o||u((o={exports:{}}).exports,o),o.exports),pn=(u,o)=>{for(var m in o)U(u,m,{get:o[m],enumerable:!0})},ve=(u,o,m,_)=>{if(o&&typeof o==\"object\"||typeof o==\"function\")for(let y of fn(o))!bn.call(u,y)&&y!==m&&U(u,y,{get:()=>o[y],enumerable:!(_=dn(o,y))||_.enumerable});return u};var hn=(u,o,m)=>(m=u!=null?cn(mn(u)):{},ve(o||!u||!u.__esModule?U(m,\"default\",{value:u,enumerable:!0}):m,u)),_n=u=>ve(U({},\"__esModule\",{value:!0}),u);var xe=H((xn,Ne)=>{Ne.exports=React});var Pe=H(z=>{\"use strict\";(function(){\"use strict\";var u=xe(),o=Symbol.for(\"react.element\"),m=Symbol.for(\"react.portal\"),_=Symbol.for(\"react.fragment\"),y=Symbol.for(\"react.strict_mode\"),G=Symbol.for(\"react.profiler\"),X=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),D=Symbol.for(\"react.forward_ref\"),M=Symbol.for(\"react.suspense\"),V=Symbol.for(\"react.suspense_list\"),k=Symbol.for(\"react.memo\"),j=Symbol.for(\"react.lazy\"),Oe=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Se=\"@@iterator\";function Re(e){if(e===null||typeof e!=\"object\")return null;var n=J&&e[J]||e[Se];return typeof n==\"function\"?n:null}var N=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function b(e){{for(var n=arguments.length,t=new Array(n>1?n-1:0),a=1;a<n;a++)t[a-1]=arguments[a];Ce(\"error\",e,t)}}function Ce(e,n,t){{var a=N.ReactDebugCurrentFrame,s=a.getStackAddendum();s!==\"\"&&(n+=\"%s\",t=t.concat([s]));var c=t.map(function(l){return String(l)});c.unshift(\"Warning: \"+n),Function.prototype.apply.call(console[e],console,c)}}var Le=!1,Ue=!1,Me=!1,Ve=!1,je=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ie(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===_||e===G||je||e===y||e===M||e===V||Ve||e===Oe||Le||Ue||Me||typeof e==\"object\"&&e!==null&&(e.$$typeof===j||e.$$typeof===k||e.$$typeof===X||e.$$typeof===K||e.$$typeof===D||e.$$typeof===Z||e.getModuleId!==void 0))}function Ae(e,n,t){var a=e.displayName;if(a)return a;var s=n.displayName||n.name||\"\";return s!==\"\"?t+\"(\"+s+\")\":t}function Q(e){return e.displayName||\"Context\"}function E(e){if(e==null)return null;if(typeof e.tag==\"number\"&&b(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case _:return\"Fragment\";case m:return\"Portal\";case G:return\"Profiler\";case y:return\"StrictMode\";case M:return\"Suspense\";case V:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var n=e;return Q(n)+\".Consumer\";case X:var t=e;return Q(t._context)+\".Provider\";case D:return Ae(e,e.render,\"ForwardRef\");case k:var a=e.displayName||null;return a!==null?a:E(e.type)||\"Memo\";case j:{var s=e,c=s._payload,l=s._init;try{return E(l(c))}catch{return null}}}return null}var v=Object.assign,w=0,ee,ne,te,oe,re,ae,ie;function le(){}le.__reactDisabledLog=!0;function Fe(){{if(w===0){ee=console.log,ne=console.info,te=console.warn,oe=console.error,re=console.group,ae=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:le,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}w++}}function We(){{if(w--,w===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:v({},e,{value:ee}),info:v({},e,{value:ne}),warn:v({},e,{value:te}),error:v({},e,{value:oe}),group:v({},e,{value:re}),groupCollapsed:v({},e,{value:ae}),groupEnd:v({},e,{value:ie})})}w<0&&b(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var I=N.ReactCurrentDispatcher,A;function O(e,n,t){{if(A===void 0)try{throw Error()}catch(s){var a=s.stack.trim().match(/\\n( *(at )?)/);A=a&&a[1]||\"\"}return`\n`+A+e}}var F=!1,S;{var Ye=typeof WeakMap==\"function\"?WeakMap:Map;S=new Ye}function se(e,n){if(!e||F)return\"\";{var t=S.get(e);if(t!==void 0)return t}var a;F=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var c;c=I.current,I.current=null,Fe();try{if(n){var l=function(){throw Error()};if(Object.defineProperty(l.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(l,[])}catch(g){a=g}Reflect.construct(e,[],l)}else{try{l.call()}catch(g){a=g}e.call(l.prototype)}}else{try{throw Error()}catch(g){a=g}e()}}catch(g){if(g&&a&&typeof g.stack==\"string\"){for(var i=g.stack.split(`\n`),p=a.stack.split(`\n`),d=i.length-1,f=p.length-1;d>=1&&f>=0&&i[d]!==p[f];)f--;for(;d>=1&&f>=0;d--,f--)if(i[d]!==p[f]){if(d!==1||f!==1)do if(d--,f--,f<0||i[d]!==p[f]){var h=`\n`+i[d].replace(\" at new \",\" at \");return e.displayName&&h.includes(\"<anonymous>\")&&(h=h.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&S.set(e,h),h}while(d>=1&&f>=0);break}}}finally{F=!1,I.current=c,We(),Error.prepareStackTrace=s}var P=e?e.displayName||e.name:\"\",ye=P?O(P):\"\";return typeof e==\"function\"&&S.set(e,ye),ye}function $e(e,n,t){return se(e,!1)}function qe(e){var n=e.prototype;return!!(n&&n.isReactComponent)}function R(e,n,t){if(e==null)return\"\";if(typeof e==\"function\")return se(e,qe(e));if(typeof e==\"string\")return O(e);switch(e){case M:return O(\"Suspense\");case V:return O(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case D:return $e(e.render);case k:return R(e.type,n,t);case j:{var a=e,s=a._payload,c=a._init;try{return R(c(s),n,t)}catch{}}}return\"\"}var C=Object.prototype.hasOwnProperty,ue={},ce=N.ReactDebugCurrentFrame;function L(e){if(e){var n=e._owner,t=R(e.type,e._source,n?n.type:null);ce.setExtraStackFrame(t)}else ce.setExtraStackFrame(null)}function Be(e,n,t,a,s){{var c=Function.call.bind(C);for(var l in e)if(c(e,l)){var i=void 0;try{if(typeof e[l]!=\"function\"){var p=Error((a||\"React class\")+\": \"+t+\" type `\"+l+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[l]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw p.name=\"Invariant Violation\",p}i=e[l](n,l,a,t,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(d){i=d}i&&!(i instanceof Error)&&(L(s),b(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",a||\"React class\",t,l,typeof i),L(null)),i instanceof Error&&!(i.message in ue)&&(ue[i.message]=!0,L(s),b(\"Failed %s type: %s\",t,i.message),L(null))}}}var He=Array.isArray;function W(e){return He(e)}function ze(e){{var n=typeof Symbol==\"function\"&&Symbol.toStringTag,t=n&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return t}}function Ge(e){try{return de(e),!1}catch{return!0}}function de(e){return\"\"+e}function fe(e){if(Ge(e))return b(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",ze(e)),de(e)}var T=N.ReactCurrentOwner,Xe={key:!0,ref:!0,__self:!0,__source:!0},me,be,Y;Y={};function Ke(e){if(C.call(e,\"ref\")){var n=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(n&&n.isReactWarning)return!1}return e.ref!==void 0}function Je(e){if(C.call(e,\"key\")){var n=Object.getOwnPropertyDescriptor(e,\"key\").get;if(n&&n.isReactWarning)return!1}return e.key!==void 0}function Ze(e,n){if(typeof e.ref==\"string\"&&T.current&&n&&T.current.stateNode!==n){var t=E(T.current.type);Y[t]||(b('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',E(T.current.type),e.ref),Y[t]=!0)}}function Qe(e,n){{var t=function(){me||(me=!0,b(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};t.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:t,configurable:!0})}}function en(e,n){{var t=function(){be||(be=!0,b(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};t.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:t,configurable:!0})}}var nn=function(e,n,t,a,s,c,l){var i={$$typeof:o,type:e,key:n,ref:t,props:l,_owner:c};return i._store={},Object.defineProperty(i._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(i,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:a}),Object.defineProperty(i,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:s}),Object.freeze&&(Object.freeze(i.props),Object.freeze(i)),i};function tn(e,n,t,a,s){{var c,l={},i=null,p=null;t!==void 0&&(fe(t),i=\"\"+t),Je(n)&&(fe(n.key),i=\"\"+n.key),Ke(n)&&(p=n.ref,Ze(n,s));for(c in n)C.call(n,c)&&!Xe.hasOwnProperty(c)&&(l[c]=n[c]);if(e&&e.defaultProps){var d=e.defaultProps;for(c in d)l[c]===void 0&&(l[c]=d[c])}if(i||p){var f=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;i&&Qe(l,f),p&&en(l,f)}return nn(e,i,p,s,a,T.current,l)}}var $=N.ReactCurrentOwner,pe=N.ReactDebugCurrentFrame;function x(e){if(e){var n=e._owner,t=R(e.type,e._source,n?n.type:null);pe.setExtraStackFrame(t)}else pe.setExtraStackFrame(null)}var q;q=!1;function B(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===o}function he(){{if($.current){var e=E($.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function on(e){{if(e!==void 0){var n=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),t=e.lineNumber;return`\n\nCheck your code at `+n+\":\"+t+\".\"}return\"\"}}var _e={};function rn(e){{var n=he();if(!n){var t=typeof e==\"string\"?e:e.displayName||e.name;t&&(n=`\n\nCheck the top-level render call using <`+t+\">.\")}return n}}function Ee(e,n){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var t=rn(n);if(_e[t])return;_e[t]=!0;var a=\"\";e&&e._owner&&e._owner!==$.current&&(a=\" It was passed a child from \"+E(e._owner.type)+\".\"),x(e),b('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',t,a),x(null)}}function ge(e,n){{if(typeof e!=\"object\")return;if(W(e))for(var t=0;t<e.length;t++){var a=e[t];B(a)&&Ee(a,n)}else if(B(e))e._store&&(e._store.validated=!0);else if(e){var s=Re(e);if(typeof s==\"function\"&&s!==e.entries)for(var c=s.call(e),l;!(l=c.next()).done;)B(l.value)&&Ee(l.value,n)}}}function an(e){{var n=e.type;if(n==null||typeof n==\"string\")return;var t;if(typeof n==\"function\")t=n.propTypes;else if(typeof n==\"object\"&&(n.$$typeof===D||n.$$typeof===k))t=n.propTypes;else return;if(t){var a=E(n);Be(t,e.props,\"prop\",a,e)}else if(n.PropTypes!==void 0&&!q){q=!0;var s=E(n);b(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",s||\"Unknown\")}typeof n.getDefaultProps==\"function\"&&!n.getDefaultProps.isReactClassApproved&&b(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function ln(e){{for(var n=Object.keys(e.props),t=0;t<n.length;t++){var a=n[t];if(a!==\"children\"&&a!==\"key\"){x(e),b(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",a),x(null);break}}e.ref!==null&&(x(e),b(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),x(null))}}function sn(e,n,t,a,s,c){{var l=Ie(e);if(!l){var i=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(i+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var p=on(s);p?i+=p:i+=he();var d;e===null?d=\"null\":W(e)?d=\"array\":e!==void 0&&e.$$typeof===o?(d=\"<\"+(E(e.type)||\"Unknown\")+\" />\",i=\" Did you accidentally export a JSX literal instead of a component?\"):d=typeof e,b(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",d,i)}var f=tn(e,n,t,s,c);if(f==null)return f;if(l){var h=n.children;if(h!==void 0)if(a)if(W(h)){for(var P=0;P<h.length;P++)ge(h[P],e);Object.freeze&&Object.freeze(h)}else b(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ge(h,e)}return e===_?ln(f):an(f),f}}var un=sn;z.Fragment=_,z.jsxDEV=un})()});var Te=H((wn,we)=>{\"use strict\";we.exports=Pe()});var vn={};pn(vn,{default:()=>yn,frontmatter:()=>En});var r=hn(Te()),En={title:\"Tailwind over everything. Mocking the iOS Weather app UI\",publishedAt:\"2023-03-05\",summary:\"This is why I will use Tailwind CSS for almost every project moving forward.\",tags:[\"Styling\",\"CSS\"]};function De(u){let o=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",strong:\"strong\",ul:\"ul\",li:\"li\",code:\"code\",pre:\"pre\"},u.components),{Weather:m,WeatherList:_}=o;return m||ke(\"Weather\",!0,\"41:1-41:12\"),_||ke(\"WeatherList\",!0,\"95:1-95:16\"),(0,r.jsxDEV)(r.Fragment,{children:[(0,r.jsxDEV)(o.p,{children:\"Tailwind CSS is a utility-first CSS framework that has taken the web development world by storm. It has quickly become a go-to choice for developers who want to streamline their CSS workflow and build websites faster. If you're not already familiar with Tailwind, you may be wondering what all the fuss is about.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:8,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:[\"In this blog, we'll explore some of the key benefits of using \",(0,r.jsxDEV)(o.a,{href:\"tailwind.com\",children:\"Tailwind CSS\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:10,columnNumber:63},this),\" as well as some of the drawbacks of more traditional approaches to CSS development. By the end of this post, you'll have a better understanding of how Tailwind can make your development process more efficient and effective, and why it's quickly becoming a must-have tool for web developers of all levels.\"]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:10,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.h2,{children:\"Let's Talk about DX\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:12,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:[\"In design, there's User Interface, User Experience, and Human Interface (as Apple calls it), but let's not forget about the \",(0,r.jsxDEV)(o.strong,{children:\"Developer Experience\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:14,columnNumber:125},this),\". Tailwind is a great example of a tool that makes the developer experience better.\"]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:14,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:\"Working with CSS files that go unused can be a frustrating experience for developers. When a CSS file contains styles that are no longer used in the project, it can make it difficult to find and update the styles that are needed. in the long run. Here are a couple key points to consider:\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:16,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.ul,{children:[`\n`,(0,r.jsxDEV)(o.li,{children:[`\n`,(0,r.jsxDEV)(o.p,{children:[\"Less time thinking of funky names \",(0,r.jsxDEV)(\"sup\",{children:\"1\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:18,columnNumber:37},this)]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:18,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:18,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.li,{children:[`\n`,(0,r.jsxDEV)(o.p,{children:[\"Reduce the size of your CSS files \",(0,r.jsxDEV)(\"sup\",{children:\"2\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:20,columnNumber:37},this)]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:20,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:20,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.li,{children:[`\n`,(0,r.jsxDEV)(o.p,{children:[\"Editing already existing styles feels safer \",(0,r.jsxDEV)(\"sup\",{children:\"3\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:22,columnNumber:47},this)]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:22,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:22,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:18,columnNumber:1},this),`\n`,(0,r.jsxDEV)(\"div\",{className:\"text-tertiary text-sm mt-8\",children:[(0,r.jsxDEV)(o.p,{children:'1 - Tailwind helps you save time and effort by eliminating the need to create unique class names for every element in your UI. You no longer have to struggle to come up with abstract or irrelevant names such as \"sidebar-inner-wrapper\" or \"content-container\".'},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:25,columnNumber:1},this),(0,r.jsxDEV)(o.p,{children:\"2 - making it easier to manage and maintain. Unlike traditional CSS, where you need to create new stylesheets for every new feature, Tailwind's utility classes can be easily reused throughout your project, significantly reducing the need to write new CSS code.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:27,columnNumber:1},this),(0,r.jsxDEV)(o.p,{children:\"3 - because classes are local to the HTML elements. With global CSS, any change you make can have unforeseen consequences elsewhere in your project, but with Tailwind, you can make changes with confidence, knowing that you won't accidentally break anything.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:29,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:24,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.h2,{children:\"Looking forward\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:33,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:\"On the bright side, we're starting to see more and more tools prioritizing the developer experience. This is a huge plus for us developers who want to focus on building features and functionality, rather than spending hours trying to figure out how to style a component.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:35,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.h2,{children:\"Speed and Efficiency\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:37,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:\"Check out this iOS weather widget. I was able to create this component in less than 5 minutes, which would have taken me much longer if I had to write the CSS and having to switch between files.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:39,columnNumber:1},this),`\n`,(0,r.jsxDEV)(m,{},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:41,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:`One of the biggest advantages of using Tailwind CSS is its ability to speed up the development process. By using utility classes, Tailwind allows developers to quickly create and style components without having to write any custom CSS. I know what you're thinking - aren't utility classes just a fancy way of saying \"inline styles\"? While that may be true, Tailwind's utility classes are much more powerful than inline styles.`},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:43,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:[\"Additionally, Tailwind has built-in pseudo styles like \",(0,r.jsxDEV)(o.code,{children:\"hover\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:45,columnNumber:56},this),\", \",(0,r.jsxDEV)(o.code,{children:\"focus\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:45,columnNumber:65},this),\", and \",(0,r.jsxDEV)(o.code,{children:\"active\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:45,columnNumber:78},this),\" (used above), which can be used to create more complex components, without leaving your TS or JS file.\"]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:45,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.h2,{children:\"The Power of Reusable Components\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:47,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:\"One of the key advantages of Tailwind CSS is its promotion of reusable components. Which is now a standard in the front-end world. By using pre-defined classes, Tailwind allows developers to create reusable components that can be easily used throughout the codebase.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:49,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.pre,{children:(0,r.jsxDEV)(o.code,{className:\"language-tsx\",children:`const WeatherList = () => {\n  return (\n    <div className=\"my-8 flex flex-col gap-2\">\n      {data.map((item, index) => (\n        <CityCard key={index} data={item} />\n      ))}\n    </div>\n  );\n};\n`},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:51,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:51,columnNumber:1},this),`\n`,(0,r.jsxDEV)(\"figcaption\",{children:\"List component\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:63,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:[\"Continuing with the weather theme here, let's create a reusable card component that can be used to display the current weather for a list of cities. With Tailwind, you can style your HTML elements without having to write any CSS rules. This can save you a lot of time, especially if you are working on a large project. Then when you need to reuse this, you don't have to go look for the \",(0,r.jsxDEV)(o.code,{children:\"styles.css\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:65,columnNumber:388},this),\" file and copy it to a new location.\"]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:65,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.pre,{children:(0,r.jsxDEV)(o.code,{className:\"language-tsx\",children:`export default const CityCard = ({item}) => {\n  return (\n    <div\n      className={\\`flex justify-between rounded-3xl bg-gradient-to-br text-white p-4 lg:px-8\n      \\${item.color}\n    \\`}>\n      <div>\n        <p className=\"text-xl font-bold\">{item.city}</p>\n        <p className=\"text-sm font-medium mb-5 opacity-75\">{item.time}</p>\n        <p className=\"text-sm font-medium mt-auto\">{item.state}</p>\n      </div>\n      <div className=\"flex flex-col justify-between\">\n        <p className=\"text-5xl\">{item.temperature}\\xB0</p>\n        <p className=\"text-sm font-medium mt-auto opacity-75\">\n          H:{item.temperature + 7}\\xB0\n          L:{item.temperature - 7}\\xB0\n        </p>\n      </div>\n    </div>\n  );\n};\n`},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:67,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:67,columnNumber:1},this),`\n`,(0,r.jsxDEV)(\"figcaption\",{children:\"Individual city component\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:91,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:\"So what? This approach not only makes development more efficient but also ensures that the UI is consistent across the project. Additionally, reusable components can be easily updated and maintained, reducing the amount of duplicate code and improving the overall quality of the codebase.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:93,columnNumber:1},this),`\n`,(0,r.jsxDEV)(_,{},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:95,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:\"Overall, Tailwind's focus on reusable components makes it a valuable tool for any developer looking to create scalable and maintainable user interfaces.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:97,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.h2,{children:\"What About Other UI Libraries?\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:99,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:\"While there are many UI libraries available, from my experience, I always found myself overriding the default styles of the library to match my project's design language. UI libraries can be a great choice for small projects where you want to quickly create a functional and visually appealing user interface.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:101,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:\"However, at scale, you typically have branding and a company design language that you want to follow or set forth. In these cases, using a UI library may not be the best approach as it can be challenging to customize the styles to fit your branding and design requirements.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:103,columnNumber:1},this),`\n`,(0,r.jsxDEV)(o.p,{children:\"Instead, creating custom components using a utility-first CSS framework like Tailwind can be a better option, as it allows for more flexibility and control over the styling of the components. Overall, while UI libraries can be useful for smaller projects, it's important to consider the specific requirements and constraints of each project before making a decision on which approach to take.\"},void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:105,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\",lineNumber:1,columnNumber:1},this)}function gn(u={}){let{wrapper:o}=u.components||{};return o?(0,r.jsxDEV)(o,Object.assign({},u,{children:(0,r.jsxDEV)(De,u,void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\"},this)}),void 0,!1,{fileName:\"/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx\"},this):De(u)}var yn=gn;function ke(u,o,m){throw new Error(\"Expected \"+(o?\"component\":\"object\")+\" `\"+u+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(m?\"\\nIt\\u2019s referenced in your code at `\"+m+\"` in `/Users/munkhsuld/Documents/DEVELOPMENT/Portfoliospace/notion-portfolio/content/blog/_mdx_bundler_entry_point-1b234086-1a25-49e1-8d7d-a364e73aac33.mdx`\":\"\"))}return _n(vn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "blog/tailwind.mdx",
  "_raw": {
    "sourceFilePath": "blog/tailwind.mdx",
    "sourceFileName": "tailwind.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/tailwind"
  },
  "type": "Post",
  "slug": "tailwind",
  "image": "/blog/tailwind/image.png",
  "og": "/blog/tailwind/image.png"
}